<Window x:Class="WpfAht10Client.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        xmlns:wpfAht10Client="clr-namespace:WpfAht10Client"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:viewModels="clr-namespace:WpfAht10Client.ViewModels"
        xmlns:converters="clr-namespace:WpfAht10Client.Views.Converters"
        xmlns:metrologicaldata="clr-namespace:WpfAht10Client.Views.MetrologicalData"
        xmlns:plotdata="clr-namespace:WpfAht10Client.Views.PlotData"
        xmlns:measurementdata="clr-namespace:WpfAht10Client.Views.MeasurementData" xmlns:log="clr-namespace:WpfAht10Client.Views.Log"
        xmlns:progressring="clr-namespace:Aht10CustomControlLibrary.CustomControls.ProgressRing;assembly=Aht10CustomControlLibrary"
        xmlns:behaviors="clr-namespace:WpfAht10Client.Views.Behaviors"
        d:DataContext="{d:DesignInstance Type=viewModels:MainViewModel}"
        Title="MainWindow" Height="850" Width="1300">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Styles/Brushes.xaml" />
                <ResourceDictionary>
                    <converters:RoutedPropertyChangedEventArgsToDataContextConverter x:Key="RoutedPropertyChangedEventArgsToDataContextConv" />
                    <BooleanToVisibilityConverter x:Key="BoolToVisibilityConv" />
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid Background="{StaticResource MainBackgroundBrush}">
            <b:Interaction.Behaviors>
                <behaviors:ChangeBlurEffectBehavior Radius="5" KernelType="Gaussian" EnableEffect="{Binding ElementName=Progress, Path=IsVisible}" />
            </b:Interaction.Behaviors>
            <Grid.RowDefinitions>
                <RowDefinition Height="0.05*" />
                <RowDefinition Height="0.9*" />
                <RowDefinition Height="0.05*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.1*" />
                <ColumnDefinition Width="0.8*" />
                <ColumnDefinition Width="0.1*" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Row="1" Grid.Column="1">
                <Grid Margin="10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <!-- Menu -->
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                        <Button AutomationProperties.AutomationId="ConnectBtn"
                                Width="80" Height="30" Content="Connect" Command="{Binding ConnectCommand}" Margin="5,0">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsConnected}" Value="True">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button AutomationProperties.AutomationId="DisconnectBtn"
                                Width="80" Height="30" Content="Disconnect" Margin="5,0" Command="{Binding DisconnectCommand}">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsConnected}" Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="5,0">
                            <TextBlock Text="Total Metlological Count: " Foreground="White" FontSize="14" />
                            <TextBlock Text="{Binding MeteorologicalCount}" Foreground="White" FontSize="14" Margin="5,0" />
                        </StackPanel>
                    </StackPanel>
                    <!-- Data -->
                    <Grid Grid.Row="1" Margin="0,15,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.7*" />
                            <RowDefinition Height="5" />
                            <RowDefinition Height="0.3*" />
                        </Grid.RowDefinitions>
                        <TabControl Background="{StaticResource MainPanelBackgroundBrush}" BorderThickness="0">
                            <!-- Metrological -->
                            <TabItem Header="Metrological">
                                <Grid Visibility="{Binding IsNotBusy, Converter={StaticResource BoolToVisibilityConv}}"
                                      Margin="0,20,0,0">
                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="Loaded">
                                            <b:InvokeCommandAction Command="{Binding TestCommand}" />
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="0.4*" />
                                        <ColumnDefinition Width="5" />
                                        <ColumnDefinition Width="0.6*" />
                                    </Grid.ColumnDefinitions>
                                    <!--UCMeasurementData-->
                                    <measurementdata:UCMeasurementData ItemsSource="{Binding MeasurementSource}"
                                                                       SelectedItem="{Binding SelectedMeasurement, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,10">
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="SelectedChanged">
                                                <b:InvokeCommandAction Command="{Binding ChangeSelectedMeasurementDateCommand}" />
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>
                                    </measurementdata:UCMeasurementData>
                                    <GridSplitter Grid.Column="1" Width="3" Margin="0,5,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Black" />
                                    <!--UcMetrologicalData-->
                                    <metrologicaldata:UcMetrologicalData Grid.Column="2" ItemsSource="{Binding MeteorologicalSource}"
                                                                         Margin="5,10">
                                    </metrologicaldata:UcMetrologicalData>
                                </Grid>
                            </TabItem>
                            <!-- Plotting -->
                            <TabItem Header="Plotting" AutomationProperties.AutomationId="Plotting">
                                <plotdata:UCPlotData x:Name="Plot" Margin="0,20,0,0"
                                                     XdataSource="{Binding DatetimeDataSource}"
                                                     YdataSource="{Binding TemperatureDataSource}"
                                                     SelectedMeasurement="{Binding DataContext.SelectedMeasurement.MeasurementDate, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type wpfAht10Client:MainWindow}}}">
                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="OnMeasurementDateChanged">
                                            <b:InvokeCommandAction Command="{Binding ChangeSelectedMeasurementDateCommand}"
                                                                   EventArgsConverter="{StaticResource RoutedPropertyChangedEventArgsToDataContextConv}"
                                                                   PassEventArgsToCommand="True" />
                                        </b:EventTrigger>
                                        <b:EventTrigger EventName="Loaded">
                                            <b:InvokeCommandAction Command="{Binding ChangeSelectedMeasurementDateCommand}"
                                                                   CommandParameter="{Binding SelectedMeasurement, ElementName=Plot}" />
                                        </b:EventTrigger>
                                        <b:EventTrigger EventName="OnMeasurementImageUpdated">
                                            <b:InvokeCommandAction Command="{Binding UpdateMeasurementImageCommand}"
                                                                   EventArgsConverter="{StaticResource RoutedPropertyChangedEventArgsToDataContextConv}"
                                                                   PassEventArgsToCommand="True" />
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>
                                </plotdata:UCPlotData>
                            </TabItem>
                        </TabControl>
                        <GridSplitter Grid.Row="1" Height="2" HorizontalAlignment="Stretch" Background="Black" />
                        <!--Log-->
                        <log:UCLog Grid.Row="2" Margin="5,10,5,0" ItemsSource="{Binding LogSource}">
                            <log:UCLog.ItemTemplate>
                                <DataTemplate>
                                    <log:UCLogItem Message="{Binding Message}" />
                                </DataTemplate>
                            </log:UCLog.ItemTemplate>
                        </log:UCLog>
                    </Grid>
                </Grid>
                <Grid Margin="10" Background="Transparent" Visibility="{Binding ElementName=Progress, Path=IsVisible, Converter={StaticResource BoolToVisibilityConv}}" />
            </Grid>
        </Grid>
        <!--ProgressRing-->
        <progressring:ProgressRing x:Name="Progress" AutomationProperties.AutomationId="Progress">
            <progressring:ProgressRing.Style>
                <Style TargetType="{x:Type progressring:ProgressRing}">
                    <Setter Property="Visibility" Value="Hidden" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=Plot, Path=DataContext.IsBusy}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsBusy}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </progressring:ProgressRing.Style>  
        </progressring:ProgressRing>
    </Grid>
</Window>